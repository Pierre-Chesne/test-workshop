name: Test 1

on:
  workflow_dispatch:

jobs:

  Terraform-Lint:
    runs-on: ubuntu-latest
    steps:

      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd ./Terraform         
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Terraform Validate
        run: |
          cd ./Terraform
          terraform validate

      - name: Run terraform fmt check
        run: |
          terraform fmt -check -diff -recursive ./Terraform
        id: var_fmt_check

      - name: Recuperation de la date
        if: ${{ failure() }}
        run: | 
          echo "::set-output name=today::$(date "+%Y/%m/%d")"
        id: var_date

      - name : Create Issue
        if: ${{ failure() }}
        uses: actions-ecosystem/action-create-issue@v1
        with:
          github_token: ${{ secrets.github_token }}
          title: Error Fucking Terraform ${{ steps.var_date.outputs.today }}
          body: |
            ## Fucking Terraform
            Erreur : ${{ steps.var_fmt_check.outputs.stdout }}
          assignees: |
            Pierre-Chesne
          labels: |
            Error Lint Terraform

  Terraform-Plan:
    runs-on: ubuntu-latest
    needs: Terraform-Lint
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
          
      - name: Terraform Init
        run: |
          cd ./Terraform         
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Terraform Plan
        run: |
          cd ./Terraform
          terraform plan \
             -var 'AzureSubscriptionID=${{ secrets.SUBSCRIPTIONID }}' \
             -var 'AzureClientSecret=${{ secrets.CLIENTSECRET }}' \
             -var 'AzureClientID=${{ secrets.CLIENTID }}' \
             -var 'AzureTenandID=${{ secrets.TENANTID }}' \
             -lock=false -out=monplan.tfplan
             
      - name: Upload Artifact 
        uses: actions/upload-artifact@v3
        with:
          name: ArtifactTerraform
          path: ./Terraform/monplan.tfplan

  Terraform-Apply:
    runs-on: ubuntu-latest
    needs: Terraform-Plan
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd ./Terraform    
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ArtifactTerraform
          path: ./Terraform

      - name: Terraform Apply
        run: |
          cd ./Terraform
          terraform apply "monplan.tfplan"           