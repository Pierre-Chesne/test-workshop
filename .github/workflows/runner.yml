name: Deploy Self Runner

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:

  Terraform-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Run terraform fmt check
        run: |
          terraform fmt -check -diff ./Terraform/Vm
        id: var_fmt_check
      
      - name: Creation d'un Timestamp
        if: ${{ failure() }}
        run: | 
          echo "::set-output name=today::$(date "+%Y/%m/%d-%H-%M-%S")"
        id: var_timestamp
      
      - name : Create Issue fmt
        if: ${{ failure() }}
        uses: actions-ecosystem/action-create-issue@v1
        with:
          github_token: ${{ secrets.github_token }}
          title: Error Terraform fmt ${{ steps.var_timestamp.outputs.today }}
          body: |
            ## Error Terraform fmt
            Erreur : "${{ steps.var_fmt_check.outputs.stdout }}"
          assignees: |
            Pierre-Chesne
          labels: |
            Error Terraform      

  Terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd ./Terraform/Vm        
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Terraform Validate
        run: |
          cd ./Terraform/Vm
          terraform validate

  Terraform-checkov:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Test with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: Terraform/Vm
          framework: terraform
          skip_check: CKV_AZURE_50,CKV_AZURE_119
          
  Terraform-plan:
    runs-on: ubuntu-latest
    needs:
      - Terraform-fmt-check
      - Terraform-validate
      - Terraform-checkov
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd ./Terraform/Vm       
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Terraform Plan
        run: |
          cd ./Terraform/Vm
          terraform plan \
             -var 'AzureSubscriptionID=${{ secrets.SUBSCRIPTIONID }}' \
             -var 'AzureClientSecret=${{ secrets.CLIENTSECRET }}' \
             -var 'AzureClientID=${{ secrets.CLIENTID }}' \
             -var 'AzureTenandID=${{ secrets.TENANTID }}' \
             -var 'sshKey=${{ secrets.SSHKEY }}' \
             -lock=false -out=tf.plan
          ls -lisa
      
      - name: Upload Artifact 
        uses: actions/upload-artifact@v3
        with:
          name: ArtifactTerraform
          path: ./Terraform/Vm/tf.plan

  Terraform-apply:
    runs-on: ubuntu-latest
    environment:
      name: deployIaC
    needs:
      - Terraform-plan
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd ./Terraform/Vm       
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ArtifactTerraform
          path: ./Terraform/Vm

      - name: Terraform Apply
        run: |
          cd ./Terraform/Vm
          terraform apply -lock=false "tf.plan"